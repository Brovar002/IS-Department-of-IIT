formal_definition_of_the_system
=> nrel_main_idtf:
	[формальное определение системы](* <- lang_ru;; *);
	[formal definition of the system](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Системой (абстрактной) S называется отношение над абстрактными множествами Х и У: S⊆Х×У.](* <- lang_ru;; *);;
		*);;
	*);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Входящие в определение системы множества Х и У характеризуют входные и выходные объекты и называются соответственно входным и выходным множествами, а их элементы — входами и выходами.](* <- lang_ru;; *);;
		*);;
	*);;






necessity_of_formalization_of_multilevel_systems
=> nrel_main_idtf:
	[необходимость абстрактной математической формализации многоуровневых систем](* <- lang_ru;; *);
	[the necessity of abstract mathematical formalization of multi-level systems](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Основные причины, вызывающие необходимость абстрактной математической формализации многоуровневых систем:
• Строгость. Используемый аппарат опирается лишь на структурные свойства систем и поэтому применим практически без ограничений ко всем возможным объектам, обладающим сходной структурой.
• Математическая теория. Формальные понятия обеспечивают основу для более детального математического изучения иерархических систем, так как позволяют при необходимости вводить и более сложные математические построения.
• Исследования структуры. При исследовании той или иной проблемы методами общей теории систем ответ на вопрос, насколько общими являются полученные выводы, однозначно дается математической структурой, используемой для формализации и анализа проблемы.](* <- lang_ru;; *);;
		*);;
	*);;






main_stages_of_the_formulation_and_analysis_of_tasks
=> nrel_main_idtf:
	[основные этапы формулирования и анализа задач](* <- lang_ru;; *);
	[the main stages of the formulation and analysis of tasks](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Этапы формулирования и анализа задач:
• Описание на вербальном уровне.
• Концептуализация и представление в виде блок-схемы.
• Формализация и формулирование задач (в рамках общей теории систем).
• Анализ с привлечением дополнительных математических построений, исследование свойств.](* <- lang_ru;; *);;
		*);;
	*);;






system_described_by_a_difference_equation
=> nrel_main_idtf:
	[система, описываемая разностным уравнением](* <- lang_ru;; *);
	[system, described by a difference equation](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Система, описываемая разностным уравнением - система вида Yk = 2*Yk-1 + Xk, описывающее некоторые наблюдения, которые проводятся в дискретные моменты времени Т = {1, 2. .... n}. Для заданного начального условия Y0=α каждому набору из n чисел X = (X1,..., Xn) соответствует единственный набор Y = (Y1, .... Yn), который удовлетворяет уравнению для каждого k = 1..n .](* <- lang_ru;; *);;
		*);;
	*);;






optimal_solutions
<- sc_node_not_relation;
=> nrel_main_idtf:
	[оптимальные решения](* <- lang_ru;; *);
	[optimal solutions](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Пусть дана функция g: X -> V, V - полностью/частично упорядочено отношением нестрогого включения. Тогда оптимальное решение(т.е ∃x*∊X*⊆X такое, что ∀x∊X* g(X*) ≤ g(X) ), где X - множество всех решений, X* - множество допустимых решений, g - целевая функция.](* <- lang_ru;; *);;
		*);;
	*);;






satisfactory_solutions
<- sc_node_not_relation;
=> nrel_main_idtf:
	[удовлетворительные решения](* <- lang_ru;; *);
	[satisfactory solutions](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Пусть X и Ω - произвольные множества, g - функция, отображающая X ✕ Ω в некоторое множество V, частично или полностью упорядоченное отношением ≤, и пусть τ - функция, переводящая Ω в V, т.е g: X ✕ Ω -> V и τ: Ω -> V. Удовлетворительным решением будет x∊X*⊆X, что ∀ω∊Ω g(x,ω) ≤ τ(ω). Ω - множество неопределенностей, τ - функция допустимости.](* <- lang_ru;; *);;
		*);;
	*);;






formal_description_of_stratified_systems
<- sc_node_not_relation;
=> nrel_main_idtf:
	[формальное описание стратифицированных систем](* <- lang_ru;; *);
	[formal description of stratified systems](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[• Для стратифицированного описания системы S: X -> Y служит предположение о том, что множество внешних стимулов X и множество откликов Y представимы в виде декартовых произведений; а именно считаются заданными два семейства множеств:
Xi, 1≤i≤n, Yi, 1≤i≤n, таких, что X = X1× ... ×Xn и Y = Y1× ... ×Yn. (1)
• Если множества X и Y представимы в виде (1), то каждая пара (Xi, Yi) , 1≤i≤n, приписывается определенной страте. i-я страта системы S -это система, представленная как отображение Si:
	1) Si Xi×Wi ->Yi,		если i = n,
	2) Si Xi×Εi×Wi -> Yi,	если 1<i<n,
	3) Si Xi×Εi -> Yi,		если i = 1.
• Семейство определенных таким образом Si, 1≤i≤n, называется стратификацией S, если существует два семейства отображений hi Yi -> Wi+1, 1≤i≤n, и ci: Yi -> Ei-1, 1≤i≤n, такие, что Ɐx∊X и y = S(x)
	1) yn = Sn(xn, hn-1 (yn-1)),
	2) yn = Si(xi, ci+1 (yi+1), hi-1 (yi-1)),
	3) yn = S1(x1, c2(y2)).](* <- lang_ru;; *);;
		*);;
	*);;






fully_stratified_system
<- sc_node_not_relation;
=> nrel_main_idtf:
	[полностью стратифицированная система](* <- lang_ru;; *);
	[fully stratified system](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Система S называется полностью стратифицированной, если каждая ее страта Si, 1≤i≤n, такова, что для любой пары (γi, ωi) из Εi×Wi и любых двух элементов xi и x'i из Xi выполняется:
	• hi( Si( xi, γi, ωi)) = hi( Si( x'i, γi, ωi)),
	• ci( Si( xi, γi, ωi)) = ci( Si( x'i, γi, ωi)).	(2)](* <- lang_ru;; *);;
		*);;
	*);

<- rrel_key_sc_element: 				
	...
	(*
 		=>nrel_idtf:[утв. (вмешательство, обратная связь)](*<-lang_ru;;*);;
 		<-statement;;
 		<=nrel_sc_text_translation:
 		...
 		(*
  		->rrel_example: [Для данного воздействия(вмешательства) γi и обратной связи ωi отклик подсистемы Si на произвольное изменение стимула xi будет таким, что ωi+1 и  γi-1 не изменяются, т.е. отклик не выходит за пределы i-й страты.](*<-lang_ru;;*);;
 		*);;
	*);;






stable_stratification
<- sc_node_not_relation;
=> nrel_main_idtf:
	[устойчивая стратификация](* <- lang_ru;; *);
	[stable stratification](* <-lang_en;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Система называется устойчиво стратифицированной, если для некоторых x из X, yi = S(x) при всяком i, 1≤i≤n, существует пара (γi, ωi), такая что
	1) ωi = hi-1 ( yi-1),	1≤i≤n,
	2) γi = ci+1 ( yi+1),	1≤i≤n,
	3) yi = Si ( xi, γi, ωi),	1≤i≤n,
и, кроме того, для всех x' из Х при любом i, 1≤i≤n, имеют место равенства (2).](* <- lang_ru;; *);;
		*);;
	*);;






formal_description_of_the_multi_layer_hierarchy
<- sc_node_not_relation;
=> nrel_main_idtf:
	[формальное описание многослойной иерархии](* <- lang_ru;; *);
	[formal description of the multi-layer hierarchy](* <-lang_en;; *);
=> nrel_idtf:
	[формальное описание иерархии слоев](* <- lang_ru;; *);

<= nrel_subdividing: 
	{  
	selection_layer;
	learning_layer;
	self_organization_layer
	};

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Иерархия слоев представляет собой совокупность вертикально расположенных решающих подсистем Si Ei -> Ei-1 и, представлена в виде решающего элемента. А именно, заданы множество решаемых задач Di (γi), γi ∊ Ei, и преобразование Ti, такое, что для любого входа γi выход γi-1 = Si (γi) определяется функцией  γi-1 Ti(xi), где xi - решение задачи Di(γi).](* <- lang_ru;; *);;
		*);;
	*);;






selection_layer
<- sc_node_not_relation;
=> nrel_main_idtf:
	[слой выбора](* <- lang_ru;; *);
	[selection layer](* <-lang_en;; *);
=> nrel_idtf:
	[первый слой](* <- lang_ru;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Слой выбора - слой, задающийся отображением S1: W1×Ε1×U -> M, где элементы множества W1 соответствуют сигналам обратной связи, которые поступают от управляемого объекта; элементами множества Ε1 являются сигналы(входы), приходящие с третьего уровня, они определяют структуру слоя S1; сигналы(входы) со второго слоя, образующие множество U, конкретизируют для первого слоя множество неопределенностей.](* <- lang_ru;; *);;
		*);;
	*);;






learning_layer
<- sc_node_not_relation;
=> nrel_main_idtf:
	[слой обучения](* <- lang_ru;; *);
	[learning layer](* <-lang_en;; *);
=> nrel_idtf:
	[второй слой](* <- lang_ru;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Слой обучения - слой, задающийся отображением S2: W2×Ε2 -> U, где элементы W2 представляют собой информацию об окружающей среде, U задает множество неопределенностей для первого слоя, а элементы Ε2 являются параметрами, определяют структуру слоя выбора S1.](* <- lang_ru;; *);;
		*);;
	*);;






self_organization_layer
<- sc_node_not_relation;
=> nrel_main_idtf:
	[слой самоорганизации](* <- lang_ru;; *);
	[self-organization layer](* <-lang_en;; *);
=> nrel_idtf:
	[третий слой](* <- lang_ru;; *);


<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Слой самоорганизации - слой, задающийся отображением S3: W3 -> E1×Ε2, где элементы W3 представляют собой информацию, поступающую на этот слой через каналы обратной связи.](* <- lang_ru;; *);;
		*);;
	*);;







formal_description_of_organizational_hierarchy
<- sc_node_not_relation;
=> nrel_main_idtf:
	[формальное описание организационной иерархии](* <- lang_ru;; *);
	[formal description of organizational hierarchy](* <-lang_en;; *);

<= nrel_inclusion: 
	hierarchy_of_decision_solutions;

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Многоэшелонная иерархия - иерархия принятия решений (Ф, >), если для любых i и j из I существует не более одного k∊I, такого, что для любого l из I соотношения l>i и l>j  влекут за собой l>k. Это означает, что для любого члена иерархии Ф в эшелоне, расположенном непосредственно над ним, найдется по крайней мере один элемент, обладающий приоритетом действия по отношению к нему.](* <- lang_ru;; *);;
		*);;
	*);;






hierarchy_of_decision_solutions
<- sc_node_not_relation;
=> nrel_main_idtf:
	[иерархия принятия решений](* <- lang_ru;; *);
	[hierarchy of decision solutions](* <-lang_en;; *);
=> nrel_idtf:
	[иерархическая схема](* <- lang_ru;; *);

<- rrel_key_sc_element:					
	...
	(*
		<- explanation;;
		<= nrel_sc_text_translation:
		...
		(*
		-> rrel_example:
				[Если Ф - (конечное) семейство систем Si, i∊I,где I - конечное множество значений индекса iб а > частично (но строго) упорядочивающее отношение в I, тогда (Ф, >) называется иерархией систем. Если же (Ф, >) иерархия решающих систем(систем принятия решений), а отношение > таково, что i>j, если Si имеет приоритет действия по отношению к Sj, то (Ф,>) называется иерархической схемой, или иерархией принятия решений.](* <- lang_ru;; *);;
		*);;
	*);;






subject_domain_of_section
=> nrel_main_idtf:
	[Предметная область формализации](* <- lang_ru;; *);
	[Subject domain of formalization](* <-lang_en;; *);
=> nrel_idtf:
	[Предметная область, объектами исследования которой являются формальные описания систем](* <- lang_ru;; *);

<- subject_domain;
-> rrel_maximum_studied_object_class: formal_definition_of_the_system;
-> rrel_not_maximum_studied_object_class:
	necessity_of_formalization_of_multilevel_systems;
	main_stages_of_the_formulation_and_analysis_of_tasks;
	system_described_by_a_difference_equation;
	optimal_solutions;
	satisfactory_solutions;
	decision_making_system;
	formal_description_of_stratified_systems;
	fully_stratified_system;
	stable_stratification;
	formal_description_of_the_multi_layer_hierarchy;
	formal_description_of_organizational_hierarchy;;
